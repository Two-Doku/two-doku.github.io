{"version":3,"sources":["assets/sudoku_example.jpg","assets/sudoku_example_1.jpg","components/Home/InvitationPopup.js","contexts/WithUserProfile.js","components/Home/Home.js","constants/routes.js","contexts/WithSocketContext.js","components/Sudoku/Cell.js","components/Sudoku/InputSelection.js","constants/state.js","components/Sudoku/Results/ResultsPopup.js","components/Sudoku/Grid.js","utils/sudoku.js","components/Common/LoadingOverlay.js","api/api.js","components/Sudoku/Twodoku.js","components/App.js","reportWebVitals.js","index.js"],"names":["baseButtonStyle","inputSyle","InvitationPopup","open","onClose","onStart","uuid","disableClose","useState","username","setUsername","inviteUrlInputRef","useRef","Modal","dimmer","closeOnEscape","closeOnDimmerClick","size","centered","Header","Content","className","id","ref","type","placeholder","readOnly","value","window","location","Icon","onClick","current","select","setSelectionRange","document","execCommand","copyText","name","onChange","target","Actions","classnames","hidden","isEmpty","disabled","UserContext","React","createContext","useUserContext","useContext","WithUser","children","userName","setUserName","userID","Math","floor","random","Provider","Introduction","showModal","setShowModal","history","useHistory","sessionID","uuidv4","Container","Message","Button","primary","Divider","Card","Image","src","SudokuBaseEx","Description","SudokuSolutionEx","href","userId","push","ROUTES","HOME","RULES","SCORE","INVITE","GAME","SocketContext","useSocketContext","WithSocketIO","socket","NumberCell","row","col","highlight","onHover","onKeyPress","playerOther","original","invalid","procureEntry","useCallback","val","entry","parseInt","isNumber","onMouseEnter","onMouseLeave","tabIndex","key","defaultProps","noop","optionValues","Array","from","map","_","idx","InputSelection","STATE","PROGRESS","WIN","LOSE","GameSuccess","icon","image","scrolling","GameFail","Results","ResultContent","state","onExit","onPlayAgain","basic","color","inverted","Grid","originalSet","currentState","puzzleSet","setPuzzleSet","currentTile","setCurrentTile","mistakeCount","setMistakeCount","gameState","setGameState","useEffect","i","isValid","isOriginal","on","receivedData","serverUser","serverRow","serverCol","currentIndex","puzzle","cell","serverValue","valid","gameWin","count","cpy","tile","highlightSet","rowSet","pos","colSet","Set","getHighlightedIndexSet","currentIdx","has","handleCellClick","isNil","emit","JSON","stringify","handleValueSelect","Cell","LoadingOverlay","text","Dimmer","active","Loader","BASE_URL","Twodoku","data","setData","loading","setLoading","useParams","gameId","fetch","then","response","json","puzzleState","user","as","TabsMetadata","label","route","App","activeTab","setActiveTab","handleItemClick","e","Menu","pointing","secondary","to","Item","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","io","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4780c799.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sudoku_example.1fc7c6a5.jpg\";","export default __webpack_public_path__ + \"static/media/sudoku_example_1.80a8efcd.jpg\";","import { isEmpty } from 'lodash';\r\nimport React, { useState, useRef } from 'react';\r\nimport classnames from 'classnames';\r\nimport { Icon, Modal } from 'semantic-ui-react';\r\n\r\nconst baseButtonStyle =\r\n\t'p-2 px-6 border rounded-lg text-xl focus:outline-none focus:ring-2 focus:ring-opacity-50 mr-3';\r\nconst closeButtonStyle =\r\n\t'bg-red-400 hover:bg-red-500 focus:ring-red-500 text-white';\r\nconst startButtonStyle =\r\n\t'bg-blue-400 hover:bg-blue-500 focus:ring-blue-500 text-white';\r\nconst disabledButtonStyle = 'bg-gray-200 text-gray-500';\r\nconst inputSyle =\r\n\t'px-3 py-3 placeholder-blueGray-300 text-blueGray-600 relative bg-white bg-white rounded text-md border-0 shadow outline-none focus:outline-none focus:ring w-full mr-4';\r\n\r\nconst copyText = ({ current }) => {\r\n\tcurrent.select();\r\n\tcurrent.setSelectionRange(0, 99999);\r\n\tdocument.execCommand('copy');\r\n};\r\nconst InvitationPopup = ({ open, onClose, onStart, uuid, disableClose }) => {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst inviteUrlInputRef = useRef();\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tdimmer={'blurring'}\r\n\t\t\topen={open}\r\n\t\t\tcloseOnEscape={!disableClose}\r\n\t\t\tcloseOnDimmerClick={!disableClose}\r\n\t\t\tonClose={onClose}\r\n\t\t\tsize=\"small\"\r\n\t\t\tcentered\r\n\t\t>\r\n\t\t\t<Modal.Header>Send your partner the URL to this page:</Modal.Header>\r\n\t\t\t<Modal.Content>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"mb-3 pt-0\">\r\n\t\t\t\t\t\t<label className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\">\r\n\t\t\t\t\t\t\tURL (Copy this)\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid=\"inviteURL\"\r\n\t\t\t\t\t\t\t\tref={inviteUrlInputRef}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"URL\"\r\n\t\t\t\t\t\t\t\tclassName={inputSyle}\r\n\t\t\t\t\t\t\t\treadOnly=\"readonly\"\r\n\t\t\t\t\t\t\t\tvalue={`${window.location}start/${uuid}`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"flex justify-center py-2\">\r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tonClick={() => copyText(inviteUrlInputRef)}\r\n\t\t\t\t\t\t\t\t\tname=\"copy outline\"\r\n\t\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer hover:text-blue-300\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3 pt-0\">\r\n\t\t\t\t\t\t<label className=\"block uppercase text-blueGray-600 text-sm font-bold mb-2\">\r\n\t\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\tclassName={inputSyle}\r\n\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal.Content>\r\n\t\t\t<Modal.Actions>\r\n\t\t\t\t<div className=\"pb-2\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={classnames(`${closeButtonStyle} ${baseButtonStyle}`, {\r\n\t\t\t\t\t\t\thidden: disableClose,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={classnames(`${baseButtonStyle}`, {\r\n\t\t\t\t\t\t\t[startButtonStyle]: !isEmpty(username),\r\n\t\t\t\t\t\t\t[disabledButtonStyle]: isEmpty(username),\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tonClick={() => onStart(username)}\r\n\t\t\t\t\t\tdisabled={isEmpty(username)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal.Actions>\r\n\t\t</Modal>\r\n\t);\r\n};\r\nexport default InvitationPopup;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nconst UserContext = React.createContext();\r\nconst useUserContext = () => {\r\n\tconst value = useContext(UserContext);\r\n\treturn value;\r\n};\r\nconst WithUser = ({ children }) => {\r\n\tconst [userName, setUserName] = useState(null);\r\n\tconst userID = Math.floor(Math.random() * 100);\r\n\treturn (\r\n\t\t<UserContext.Provider value={[userID, userName, setUserName]}>\r\n\t\t\t{children}\r\n\t\t</UserContext.Provider>\r\n\t);\r\n};\r\n\r\nexport { WithUser as default, useUserContext };\r\n","import React, { useState } from 'react';\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tContainer,\r\n\tDivider,\r\n\tImage,\r\n\tMessage,\r\n} from 'semantic-ui-react';\r\nimport SudokuBaseEx from 'assets/sudoku_example.jpg';\r\nimport SudokuSolutionEx from 'assets/sudoku_example_1.jpg';\r\nimport InvitationPopup from './InvitationPopup';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory } from 'react-router';\r\nimport { useUserContext } from 'contexts/WithUserProfile';\r\n\r\nconst Introduction = () => {\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst history = useHistory();\r\n\tconst [, , setUserName] = useUserContext();\r\n\tconst sessionID = uuidv4();\r\n\tconst initiateGame = (userId) => {\r\n\t\tsetUserName(userId);\r\n\t\thistory.push(`start/${sessionID}`);\r\n\t};\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Message size=\"big\">\r\n\t\t\t\t<Message.Header>\r\n\t\t\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t\t\t<span className=\"text-3xl\">Rules of Twodoku</span>\r\n\t\t\t\t\t\t<Button primary size=\"large\" onClick={() => setShowModal(true)}>\r\n\t\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Message.Header>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<p>\r\n\t\t\t\t\tIt's like Sudoku, but two people work together to solve a single\r\n\t\t\t\t\tpuzzle!\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tSudoku is a number puzzle game played using 81 squares laid out on a\r\n\t\t\t\t\t9×9 grid. The grid is further broken down into 9 3×3 boxes. When you\r\n\t\t\t\t\tstart a sudoku puzzle, some of the numbers will have already been\r\n\t\t\t\t\tplaced. All you have to do is fill in the missing numbers by following\r\n\t\t\t\t\tsome simple rules:\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"pl-20\">\r\n\t\t\t\t\t<ol className=\"list-decimal\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\tEvery box must contain each number 1-9. The boxes are 3×3 grids\r\n\t\t\t\t\t\t\tand their outlines are marked with thicker line.\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>Every row must contain each number 1-9</li>\r\n\t\t\t\t\t\t<li>Every column must contain each number 1-9</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEach sudoku board has only one solution, which means that each square\r\n\t\t\t\t\thas only one possible correct number. This allows you to use logic to\r\n\t\t\t\t\tfind the correct number to place in each square. You can find the\r\n\t\t\t\t\tcorrect number to write either by eliminating every other number as a\r\n\t\t\t\t\tpossibility or by eliminating that number as a possibility in that\r\n\t\t\t\t\tsquare’s shared row, column, or box.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>When you start a puzzle, it will look like something this:</p>\r\n\t\t\t\t<Card centered>\r\n\t\t\t\t\t<Image src={SudokuBaseEx} />\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Card.Description className=\"text-center\">\r\n\t\t\t\t\t\t\tSome of the squares have values, your job is to fill in the blank\r\n\t\t\t\t\t\t\tsquares.\r\n\t\t\t\t\t\t</Card.Description>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<p>When solved, the puzzle will look like this:</p>\r\n\t\t\t\t<Card centered>\r\n\t\t\t\t\t<Image src={SudokuSolutionEx} />\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Card.Description className=\"text-center\">\r\n\t\t\t\t\t\t\tNotice how every row, column, and box contains every number 1-9.\r\n\t\t\t\t\t\t</Card.Description>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tSudoku instructions were written by{' '}\r\n\t\t\t\t\t<a href=\"http://www.sudokubeginner.com/rules-of-sudoku/\">\r\n\t\t\t\t\t\tsudokubeginner.com\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</p>\r\n\t\t\t</Message>\r\n\t\t\t<InvitationPopup\r\n\t\t\t\topen={showModal}\r\n\t\t\t\tonClose={() => setShowModal(false)}\r\n\t\t\t\tonStart={initiateGame}\r\n\t\t\t\tuuid={sessionID}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n};\r\nexport default Introduction;\r\n","const ROUTES = {\r\n\tHOME: '',\r\n\tRULES: 'rules',\r\n\tSCORE: 'scoreboard',\r\n\tINVITE: 'invite',\r\n\tGAME: 'start',\r\n};\r\nexport default ROUTES;\r\n","import React, { useContext } from 'react';\r\n\r\nconst SocketContext = React.createContext();\r\nconst useSocketContext = () => {\r\n\tconst value = useContext(SocketContext);\r\n\treturn value;\r\n};\r\nconst WithSocketIO = ({ socket, children }) => {\r\n\treturn (\r\n\t\t<SocketContext.Provider value={[socket]}>{children}</SocketContext.Provider>\r\n\t);\r\n};\r\n\r\nexport { WithSocketIO as default, useSocketContext };\r\n","import React, { useCallback } from 'react';\r\nimport classnames from 'classnames';\r\nimport { isNumber, noop } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst boxStyle =\r\n\t'border border-gray-300 cursor-pointer text-center py-2 md:py-7  focus:outline-none';\r\nconst hoverStyle = 'hover:bg-green-100';\r\nconst horDividerStyle = 'border-l-4';\r\nconst verDividerStyle = 'border-t-4';\r\nconst highlightStyle = 'bg-blue-100';\r\nconst playerOtherHighlightStyle = 'bg-yellow-100';\r\nconst playerInputStyle = 'text-green-500';\r\nconst invalidStyle = 'text-red-500 bg-pink-100';\r\n\r\nconst NumberCell = ({\r\n\tvalue,\r\n\trow,\r\n\tcol,\r\n\thighlight,\r\n\tonHover,\r\n\tonClick,\r\n\tonKeyPress,\r\n\tplayerOther,\r\n\toriginal,\r\n\tinvalid,\r\n}) => {\r\n\tconst procureEntry = useCallback(\r\n\t\t(val) => {\r\n\t\t\tconst entry = parseInt(val);\r\n\t\t\tif (isNumber(entry) && entry > 0) {\r\n\t\t\t\tonKeyPress(entry);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[onKeyPress]\r\n\t);\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classnames(`${boxStyle}`, {\r\n\t\t\t\t[horDividerStyle]: col % 3 === 1 && col !== 1,\r\n\t\t\t\t[verDividerStyle]: row % 3 === 1 && row !== 1,\r\n\t\t\t\t[highlightStyle]: highlight && !playerOther && !invalid,\r\n\t\t\t\t[playerOtherHighlightStyle]: playerOther && !invalid,\r\n\t\t\t\t[playerInputStyle]: !original && !invalid,\r\n\t\t\t\t[invalidStyle]: invalid,\r\n\t\t\t\t[hoverStyle]: !invalid,\r\n\t\t\t})}\r\n\t\t\tonMouseEnter={() => onHover(row, col)}\r\n\t\t\tonMouseLeave={() => onHover()}\r\n\t\t\tonClick={() => onClick(row, col)}\r\n\t\t\ttabIndex=\"0\"\r\n\t\t\tonKeyPress={({ key }) => procureEntry(key)}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<span className=\"text-3xl\">{value ? value : <br />}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nNumberCell.propTypes = {\r\n\tvalue: PropTypes.number.isRequired,\r\n\trow: PropTypes.number.isRequired,\r\n\tcol: PropTypes.number.isRequired,\r\n\thighlight: PropTypes.bool,\r\n\tonHover: PropTypes.func,\r\n\tonClick: PropTypes.func,\r\n\tonKeyPress: PropTypes.func,\r\n\tplayerOther: PropTypes.bool,\r\n\toriginal: PropTypes.bool,\r\n\tinvalid: PropTypes.bool,\r\n};\r\nNumberCell.defaultProps = {\r\n\tonHover: noop,\r\n\tonClick: noop,\r\n\tonKeyPress: noop,\r\n};\r\nexport default NumberCell;\r\n","import React from 'react';\r\n\r\nconst optionValues = Array.from(Array(9)).map((_, idx) => idx + 1);\r\n\r\nconst inputNumStyle =\r\n\t'text-4xl sm:text-5xl  text-blue-400 cursor-pointer font-semibold hover:text-blue-700';\r\n\r\nconst InputSelection = ({ onClick }) => {\r\n\treturn (\r\n\t\t<div className=\"flex justify-center\">\r\n\t\t\t<div className=\"w-5/6 grid grid-cols-9\">\r\n\t\t\t\t{optionValues.map((val) => (\r\n\t\t\t\t\t<div key={`val_${val}`} className=\"text-center\">\r\n\t\t\t\t\t\t<span className={inputNumStyle} onClick={() => onClick(val)}>\r\n\t\t\t\t\t\t\t{val}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default InputSelection;\r\n","const STATE = {\r\n\tPROGRESS: 'progress',\r\n\tWIN: 'win',\r\n\tLOSE: 'lose',\r\n};\r\nexport default STATE;\r\n","import STATE from 'constants/state';\r\nimport React from 'react';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\n\r\nconst GameSuccess = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header icon>\r\n\t\t\t\t<Icon name=\"trophy\" />\r\n\t\t\t\tWell Done!\r\n\t\t\t</Header>\r\n\t\t\t<Modal.Content image scrolling>\r\n\t\t\t\t<p className=\"text-center text-xl\">\r\n\t\t\t\t\tYou completed this Sudoku Puzzle. Would you like to play another game?\r\n\t\t\t\t</p>\r\n\t\t\t</Modal.Content>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst GameFail = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header icon>\r\n\t\t\t\t<Icon name=\"handshake outline\" />\r\n\t\t\t\tOh no!\r\n\t\t\t</Header>\r\n\t\t\t<Modal.Content>\r\n\t\t\t\t<p className=\"text-center text-xl\">\r\n\t\t\t\t\tToo many mistakes have been made on this Sudoku Puzzle.\r\n\t\t\t\t</p>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p className=\"text-center text-xl\">\r\n\t\t\t\t\tWould you like to play another game?\r\n\t\t\t\t</p>\r\n\t\t\t</Modal.Content>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst Results = ({ open, state, onExit, onPlayAgain }) => {\r\n\tlet ResultContent;\r\n\tswitch (state) {\r\n\t\tcase STATE.WIN:\r\n\t\t\tResultContent = <GameSuccess />;\r\n\t\t\tbreak;\r\n\t\tcase STATE.LOSE:\r\n\t\t\tResultContent = <GameFail />;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn <></>;\r\n\t}\r\n\treturn (\r\n\t\t<Modal basic open={open} size=\"small\">\r\n\t\t\t{ResultContent}\r\n\t\t\t<Modal.Actions>\r\n\t\t\t\t<Button basic color=\"red\" inverted onClick={onExit}>\r\n\t\t\t\t\t<Icon name=\"remove\" /> No\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button color=\"green\" inverted onClick={onPlayAgain}>\r\n\t\t\t\t\t<Icon name=\"checkmark\" /> Yes\r\n\t\t\t\t</Button>\r\n\t\t\t</Modal.Actions>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default Results;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Cell from 'components/Sudoku/Cell';\r\nimport { useSocketContext } from 'contexts/WithSocketContext';\r\nimport { useUserContext } from 'contexts/WithUserProfile';\r\nimport { isEmpty, isNil } from 'lodash-es';\r\nimport { getHighlightedIndexSet } from 'utils/sudoku';\r\nimport InputSelection from 'components/Sudoku/InputSelection';\r\nimport { Divider } from 'semantic-ui-react';\r\nimport Results from './Results/ResultsPopup';\r\nimport STATE from 'constants/state';\r\nimport { useHistory } from 'react-router';\r\nimport ROUTES from 'constants/routes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst MISTAKE_MAX = 6;\r\nconst Grid = ({ id, originalSet, currentState }) => {\r\n\tconst [puzzleSet, setPuzzleSet] = useState([]);\r\n\tconst [currentTile, setCurrentTile] = useState([]);\r\n\tconst [mistakeCount, setMistakeCount] = useState(0);\r\n\tconst [gameState, setGameState] = useState(STATE.PROGRESS);\r\n\tconst [socket] = useSocketContext();\r\n\tconst [userID] = useUserContext();\r\n\tconst history = useHistory();\r\n\tuseEffect(() => {\r\n\t\tsetPuzzleSet(\r\n\t\t\t[...currentState].map(({ value, isValid }, i) => ({\r\n\t\t\t\tvalue,\r\n\t\t\t\tisOriginal: originalSet[i] > 0,\r\n\t\t\t\tisValid,\r\n\t\t\t}))\r\n\t\t);\r\n\t}, [originalSet, currentState]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('cell-position', (receivedData) => {\r\n\t\t\tconst {\r\n\t\t\t\tuserID: serverUser,\r\n\t\t\t\trow: serverRow,\r\n\t\t\t\tcol: serverCol,\r\n\t\t\t} = receivedData;\r\n\r\n\t\t\tif (serverUser !== userID) {\r\n\t\t\t\tconst currentIndex = (serverRow - 1) * 9 + (serverCol - 1);\r\n\t\t\t\tsetPuzzleSet((puzzle) => {\r\n\t\t\t\t\treturn puzzle.map((cell, idx) => ({\r\n\t\t\t\t\t\t...cell,\r\n\t\t\t\t\t\tplayerOther: currentIndex === idx,\r\n\t\t\t\t\t}));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\tsocket.on('cell-populate', (receivedData) => {\r\n\t\t\tconst {\r\n\t\t\t\tuserID: serverUser,\r\n\t\t\t\trow: serverRow,\r\n\t\t\t\tcol: serverCol,\r\n\t\t\t\tvalue: serverValue,\r\n\t\t\t\tvalid,\r\n\t\t\t\tgameWin,\r\n\t\t\t} = receivedData;\r\n\t\t\tconst currentIndex = (serverRow - 1) * 9 + (serverCol - 1);\r\n\t\t\tif (gameWin) {\r\n\t\t\t\tsetGameState(STATE.WIN);\r\n\t\t\t}\r\n\t\t\tif (!valid && serverUser === userID) {\r\n\t\t\t\tsetMistakeCount((count) => count + 1);\r\n\t\t\t}\r\n\t\t\tsetPuzzleSet((puzzle) => {\r\n\t\t\t\tconst cpy = [...puzzle];\r\n\t\t\t\tcpy[currentIndex]['value'] = serverValue;\r\n\t\t\t\tcpy[currentIndex]['isValid'] = valid;\r\n\t\t\t\treturn cpy;\r\n\t\t\t});\r\n\t\t});\r\n\t}, [userID, socket]);\r\n\tuseEffect(() => {\r\n\t\tif (mistakeCount >= MISTAKE_MAX) {\r\n\t\t\tsetGameState(STATE.LOSE);\r\n\t\t}\r\n\t}, [mistakeCount]);\r\n\tuseEffect(() => {\r\n\t\tif (!isEmpty(currentTile)) {\r\n\t\t\tconst [row, col] = currentTile;\r\n\t\t\tconst highlightSet = getHighlightedIndexSet(row, col);\r\n\t\t\tconst currentIdx = (row - 1) * 9 + (col - 1);\r\n\t\t\tsetPuzzleSet((puzzle) =>\r\n\t\t\t\tpuzzle.map((tile, idx) => ({\r\n\t\t\t\t\t...tile,\r\n\t\t\t\t\thighlight: highlightSet.has(idx) && idx !== currentIdx,\r\n\t\t\t\t}))\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetPuzzleSet((puzzle) =>\r\n\t\t\t\tpuzzle.map((tile, idx) => ({\r\n\t\t\t\t\t...tile,\r\n\t\t\t\t\thighlight: false,\r\n\t\t\t\t}))\r\n\t\t\t);\r\n\t\t}\r\n\t}, [currentTile]);\r\n\tconst handleCellClick = useCallback(\r\n\t\t(row, col) => {\r\n\t\t\tif (isNil(row) && isNil(col)) {\r\n\t\t\t\tsetCurrentTile([]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsocket.emit(\r\n\t\t\t\t'cell-position',\r\n\t\t\t\tJSON.stringify({ userID, row, col, sessionID: id })\r\n\t\t\t);\r\n\t\t\tsetCurrentTile(() => [row, col]);\r\n\t\t},\r\n\t\t[socket, userID, id]\r\n\t);\r\n\r\n\tconst handleValueSelect = useCallback(\r\n\t\t(value) => {\r\n\t\t\tconst [row, col] = currentTile;\r\n\t\t\tif (isEmpty(currentTile)) return;\r\n\r\n\t\t\tconst currentIndex = (row - 1) * 9 + (col - 1);\r\n\t\t\tif (\r\n\t\t\t\tpuzzleSet[currentIndex]['isOriginal'] ||\r\n\t\t\t\tpuzzleSet[currentIndex]['value'] === value\r\n\t\t\t)\r\n\t\t\t\treturn;\r\n\t\t\tsetPuzzleSet((puzzle) => {\r\n\t\t\t\tconst cpy = [...puzzle];\r\n\t\t\t\tcpy[currentIndex]['value'] = value;\r\n\t\t\t\treturn cpy;\r\n\t\t\t});\r\n\t\t\tsocket.emit(\r\n\t\t\t\t'cell-populate',\r\n\t\t\t\tJSON.stringify({ userID, row, col, value, sessionID: id })\r\n\t\t\t);\r\n\t\t},\r\n\t\t[currentTile, puzzleSet, socket, userID, id]\r\n\t);\r\n\r\n\tconst handleExit = () => {\r\n\t\thistory.push(`/${ROUTES.HOME}`);\r\n\t};\r\n\tconst handlePlayAgain = () => {\r\n\t\tsetGameState(STATE.PROGRESS);\r\n\t\tsetMistakeCount(0);\r\n\t\thistory.push(`/${ROUTES.GAME}/${uuidv4()}`);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"flex justify-start mb-3\">\r\n\t\t\t\t<span className=\"text-xl font-semibold bg-red-100 px-2 py-1 text-red-800\">\r\n\t\t\t\t\tMistake Count: {mistakeCount}/{MISTAKE_MAX}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<InputSelection onClick={handleValueSelect} />\r\n\t\t\t<Divider />\r\n\r\n\t\t\t{/* Sudoku Board */}\r\n\t\t\t<div className=\"flex justify-center\">\r\n\t\t\t\t<div className=\" w-5/6 grid grid-cols-9 px-10\">\r\n\t\t\t\t\t{puzzleSet.map(\r\n\t\t\t\t\t\t({ value, highlight, playerOther, isOriginal, isValid }, idx) => (\r\n\t\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\t\tkey={`Tile_${idx}`}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\trow={Math.floor(idx / 9) + 1}\r\n\t\t\t\t\t\t\t\tcol={(idx % 9) + 1}\r\n\t\t\t\t\t\t\t\thighlight={highlight}\r\n\t\t\t\t\t\t\t\tonClick={handleCellClick}\r\n\t\t\t\t\t\t\t\tonKeyPress={handleValueSelect}\r\n\t\t\t\t\t\t\t\tplayerOther={playerOther}\r\n\t\t\t\t\t\t\t\toriginal={isOriginal}\r\n\t\t\t\t\t\t\t\tinvalid={!isValid}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Results\r\n\t\t\t\topen\r\n\t\t\t\tstate={gameState}\r\n\t\t\t\tonExit={handleExit}\r\n\t\t\t\tonPlayAgain={handlePlayAgain}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Grid;\r\n","const getHighlightedIndexSet = (row, col) => {\r\n\tconst rowSet = Array.from(Array(9)).map((pos, idx) => col - 1 + idx * 9);\r\n\tconst colSet = Array.from(Array(9)).map((pos, idx) => idx + (row - 1) * 9);\r\n\tconst boxSet = [];\r\n\r\n\treturn new Set([...rowSet, ...colSet, ...boxSet]);\r\n};\r\nexport { getHighlightedIndexSet };\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nconst LoadingOverlay = ({ text, size }) => {\r\n\treturn (\r\n\t\t<Dimmer active inverted>\r\n\t\t\t<Loader size={size} inverted>\r\n\t\t\t\t{text}\r\n\t\t\t</Loader>\r\n\t\t</Dimmer>\r\n\t);\r\n};\r\nLoadingOverlay.defaultProps = {\r\n\ttext: 'Loading',\r\n\tsize: 'medium',\r\n};\r\nexport default LoadingOverlay;\r\n","const BASE_URL = 'https://two-doku.herokuapp.com';\r\nexport { BASE_URL };\r\n","import { useSocketContext } from 'contexts/WithSocketContext';\r\nimport { useUserContext } from 'contexts/WithUserProfile';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Header } from 'semantic-ui-react';\r\nimport Grid from './Grid';\r\nimport LoadingOverlay from 'components/Common/LoadingOverlay';\r\nimport InvitationPopup from 'components/Home/InvitationPopup';\r\nimport { isEmpty } from 'lodash';\r\nimport { BASE_URL } from 'api/api';\r\n\r\nconst Twodoku = () => {\r\n\tconst [data, setData] = useState({ puzzle: [], state: [] });\r\n\tconst [userID, userName, setUserName] = useUserContext();\r\n\tconst [showModal, setShowModal] = useState(isEmpty(userName));\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst { gameId: sessionID } = useParams();\r\n\tconst [socket] = useSocketContext();\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`${BASE_URL}/puzzle/${sessionID}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then(({ puzzle: puzzleSet, state: puzzleState }) => {\r\n\t\t\t\tsetData({\r\n\t\t\t\t\tpuzzle: puzzleSet,\r\n\t\t\t\t\tstate: puzzleState,\r\n\t\t\t\t});\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t\tsocket.emit('join-game', JSON.stringify({ userID, sessionID }));\r\n\t}, [socket, sessionID, userID]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InvitationPopup\r\n\t\t\t\topen={showModal}\r\n\t\t\t\tonClose={() => setShowModal(false)}\r\n\t\t\t\tonStart={(user) => {\r\n\t\t\t\t\tsetUserName(user);\r\n\t\t\t\t\tsetShowModal(false);\r\n\t\t\t\t}}\r\n\t\t\t\tdisableClose\r\n\t\t\t\tuuid={sessionID}\r\n\t\t\t/>\r\n\t\t\t{loading && <LoadingOverlay size={'large'} />}\r\n\t\t\t<div className=\"flex justify-between\">\r\n\t\t\t\t<Header as=\"h1\">Welcome to Twodoku</Header>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"text-xl font-bold bg-purple-600 text-white px-2 py-1 rounded-lg\">\r\n\t\t\t\t\t\t{userName}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Grid\r\n\t\t\t\toriginalSet={data.puzzle}\r\n\t\t\t\tcurrentState={data.state}\r\n\t\t\t\tid={sessionID}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Twodoku;\r\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Container, Menu } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Introduction from './Home/Home';\nimport ROUTES from 'constants/routes';\nimport Twodoku from './Sudoku/Twodoku';\n\nconst TabsMetadata = [{ label: 'Home', route: ROUTES.HOME }];\nconst tabStyles = 'font-sans text-2xl font-light';\nconst activeTabStyles = 'font-sans text-3xl font-normal';\nconst App = () => {\n\tconst [activeTab, setActiveTab] = useState(ROUTES.HOME);\n\tconst handleItemClick = (e, { name }) => setActiveTab(name);\n\n\treturn (\n\t\t<Router>\n\t\t\t<Container>\n\t\t\t\t<Menu pointing secondary>\n\t\t\t\t\t{TabsMetadata.map(({ label, route }, idx) => (\n\t\t\t\t\t\t<Link to={`/${route}`} key={`tab_${idx}`}>\n\t\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\t\tname={route}\n\t\t\t\t\t\t\t\tactive={activeTab === route}\n\t\t\t\t\t\t\t\tonClick={handleItemClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={classnames(tabStyles, {\n\t\t\t\t\t\t\t\t\t\t[activeTabStyles]: activeTab === route,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))}\n\t\t\t\t</Menu>\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={`/${ROUTES.GAME}/:gameId`}>\n\t\t\t\t\t\t<Twodoku />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t<Introduction />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Container>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { io } from 'socket.io-client';\r\nimport App from 'components/App';\r\nimport WithSocketIO from 'contexts/WithSocketContext';\r\nimport WithUser from 'contexts/WithUserProfile';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\nimport { BASE_URL } from 'api/api';\r\n\r\nconst socket = io(BASE_URL);\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<WithUser>\r\n\t\t\t<WithSocketIO socket={socket}>\r\n\t\t\t\t<App />\r\n\t\t\t</WithSocketIO>\r\n\t\t</WithUser>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}